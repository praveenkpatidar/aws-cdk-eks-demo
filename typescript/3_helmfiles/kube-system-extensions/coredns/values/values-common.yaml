---

# DO NOT change
# This ensures the service matches the original AWS supplied manifests
# Otherwise your deployment will fail and cannot be easily completed as the
# cluster won't have any working DNS :-(
fullnameOverride: kube-dns

# hosted on gitops-prod (053457794187), rather than dockerhub for safety and rate limits
image:
  repository: 053457794187.dkr.ecr.ap-southeast-2.amazonaws.com/project-orgedns
  tag: "1.8.7"
  pullPolicy: IfNotPresent

resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 200m
    memory: 256Mi

podAnnotations:
  eks.amazonaws.com/compute-type: ec2

prometheus:
  service:
    enabled: true
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9153"
  monitor:
    enabled: false

service:
  # clusterIP has to match the Kubelet config for the original kube-dns svc provisioned by EKS
  clusterIP: ""
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"

serviceAccount:
  create: true
  name: coredns

rbac:
  create: true
  name: coredns
  nodeReader:
    name: system:coredns-node-reader

priorityClassName: system-cluster-critical

# Default zone is what Kubernetes recommends:
# https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/#coredns-configmap-options
servers:
  - zones:
      - zone: .
    port: 53
    # If serviceType is nodePort you can specify nodePort here
    # nodePort: 30053
    plugins:
      # Add autopath
      - name: autopath
        parameters: "@kubernetes"
      - name: errors
      # Serves a /health endpoint on :8080, required for livenessProbe
      - name: health
        configBlock: |-
          lameduck 5s
      # Serves a /ready endpoint on :8181, required for readinessProbe
      - name: ready
      # Required to query kubernetes API for data
      - name: kubernetes
        parameters: cluster.local in-addr.arpa ip6.arpa
        configBlock: |-
          pods verified
          fallthrough in-addr.arpa ip6.arpa
          ttl 30
      # Serves a /metrics endpoint on :9153, required for serviceMonitor
      - name: prometheus
        parameters: 0.0.0.0:9153
      - name: forward
        parameters: . /etc/resolv.conf
      - name: cache
        parameters: 30
      - name: loop
      - name: reload
      - name: loadbalance

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: beta.kubernetes.io/os
              operator: In
              values:
                - linux
            - key: beta.kubernetes.io/arch
              operator: In
              values:
                - amd64
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: k8s-app
                operator: In
                values:
                  - coredns
          topologyKey: kubernetes.io/hostname
        weight: 100
      - podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: k8s-app
                operator: In
                values:
                  - coredns
          topologyKey: failure-domain.beta.kubernetes.io/zone
        weight: 75

replicaCount: 3

podDisruptionBudget:
  maxUnavailable: 1

# Custom labels to apply to Deployment, Pod, Configmap, Service, ServiceMonitor. Including autoscaler if enabled.
customLabels:
  eks.amazonaws.com/component: coredns

## Configure a cluster-proportional-autoscaler for coredns
# See https://github.com/kubernetes-incubator/cluster-proportional-autoscaler
autoscaler:
  enabled: true
  nodesPerReplica: 12
  coresPerReplica: 100
  min: 4
  max: 24
  includeUnschedulableNodes: false
  preventSinglePointFailure: true

  image:
    repository: k8s.gcr.io/cluster-proportional-autoscaler-amd64
    tag: "1.8.1"
    pullPolicy: IfNotPresent

  resources:
    requests:
      cpu: "50m"
      memory: "50Mi"
    limits:
      cpu: "100m"
      memory: "100Mi"
